Imports System.Windows.Forms

Public Class dlgOpenTest
  Private DTAnswers As New DataTable, DTPytania As DataTable ',DTStudentAnswers 'DS As DataSet
  Private Sub OK_Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OK_Button.Click
    Me.DialogResult = System.Windows.Forms.DialogResult.OK
    tmTest.Stop()
    UpdateWersja()
    SaveAnswer()
    Me.Close()
  End Sub

    Private Sub Cancel_Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Cancel_Button.Click
    Me.DialogResult = System.Windows.Forms.DialogResult.Cancel
    tmTest.Stop()
    UpdateWersja()
    Me.Close()
    End Sub

  Private Sub tmTest_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles tmTest.Tick
    lblTimeLeft.ForeColor = CType(IIf(DateTime.Compare(DateTime.ParseExact(lblTimeLeft.Text, "HH:mm:ss", Nothing).Subtract(TimeSpan.FromSeconds(1)), DateTime.ParseExact(New TimeSpan(0, 1, 0).ToString, "HH:mm:ss", Nothing)) >= 0, Color.Black, Color.Red), Color)
    If DateTime.Compare(DateTime.ParseExact(lblTimeLeft.Text, "HH:mm:ss", Nothing).Subtract(TimeSpan.FromSeconds(1)), DateTime.ParseExact(New TimeSpan(0, 0, 0).ToString, "HH:mm:ss", Nothing)) >= 0 Then
      lblTimeLeft.Text = DateTime.ParseExact(lblTimeLeft.Text, "HH:mm:ss", Nothing).Subtract(TimeSpan.FromSeconds(1)).ToString("HH:mm:ss")
    Else
      tmTest.Stop()
      MessageBox.Show("Upłynął czas na rozwiązanie testu." & vbNewLine & "Zaznaczone odpowiedzi zostaną zapisane na serwerze.", "Błyskawica.NET")
      OK_Button_Click(sender, e)
    End If

  End Sub
  Private Sub InitializeTimer()
    ' Run this procedure in an appropriate event.
    ' Set to 1 second.
    tmTest.Interval = 1000
    ' Enable timer.
    tmTest.Enabled = True
  End Sub

  Private Sub dlgOpenTest_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
    ListViewConfig(lvPytanie)
    DTAnswers.Columns.Add("ID")
    DTAnswers.Columns("ID").DataType = System.Type.GetType("System.Int64")
    DTAnswers.Columns.Add("TrescOdpowiedzi")
    DTAnswers.Columns("TrescOdpowiedzi").DataType = System.Type.GetType("System.String")
    DTAnswers.Columns.Add("Punktacja")
    DTAnswers.Columns("Punktacja").DataType = System.Type.GetType("System.Int16")
    DTAnswers.Columns.Add("IdPytanie")
    DTAnswers.Columns("IdPytanie").DataType = System.Type.GetType("System.Int64")
    DTAnswers.Columns.Add("Status")
    DTAnswers.Columns("Status").DataType = System.Type.GetType("System.Byte")

    FetchData(SharedVersion.TestID.ToString)
    GetData()
    InitializeTimer()
    lblTimeLeft.Text = New TimeSpan(0, CType(lblTimeLeft.Text, Integer), 0).ToString
    tmTest.Start()
    'MessageBox.Show(
  End Sub
  Private Sub ListViewConfig(ByVal lv As ListView)
    With lv
      .View = View.Details
      .FullRowSelect = True
      .GridLines = True
      .MultiSelect = False
      .AllowColumnReorder = False
      .AutoResizeColumns(0)
      .HideSelection = False
      '.HoverSelection = True
      .HeaderStyle = ColumnHeaderStyle.Nonclickable
      AddColumns()
      .Items.Clear()
      .Enabled = False
    End With
  End Sub
  Private Sub AddColumns()
    lvPytanie.Columns.Add("ID", 0, HorizontalAlignment.Left)
    lvPytanie.Columns.Add("Numer pytania", 150, HorizontalAlignment.Center)
  End Sub
  Private Sub FetchData(ByVal IdTest As String)
    Dim DBA As New DataBaseAction, W As New WersjaSQL
    'DS = DBA.GetDataSet(W.SelectPytanie(IdTest) & W.SelectAnswer(IdTest))
    DTPytania = DBA.GetDataTable(W.SelectPytanie(IdTest))
    FetchAnswers()
  End Sub
  Private Sub FetchAnswers()
    Dim DBA As New DataBaseAction, W As New WersjaSQL, Answers As String = ""
    Dim R As MySqlDataReader = Nothing
    Try
      If SharedVersion.TypTestu = GlobalValues.TypTestu.Jednokrotny Then
        For Each Row As DataRow In DTPytania.Rows
          Answers += W.SelectCorrectAnswer(Row.Item(0).ToString, "1")
          Answers += W.SelectWrongAnswer(Row.Item(0).ToString, (SharedVersion.LimitOdp - 1).ToString)
        Next
      Else
        For Each Row As DataRow In DTPytania.Rows
          Answers += W.SelectCorrectAnswer(Row.Item(0).ToString, SharedVersion.LimitOdp.ToString)
          Answers += W.SelectWrongAnswer(Row.Item(0).ToString, (SharedVersion.LimitOdp - DBA.ComputeRecords(W.CountCorrectAnswers(Row.Item(0).ToString))).ToString)
        Next

      End If
      R = DBA.GetReader(Answers)
      While True
        While R.Read()
          DTAnswers.Rows.Add(R.Item(0), R.Item(1), R.Item(2), R.Item(3), CType("0", Byte))
        End While
        If Not R.NextResult() Then Exit While
      End While

    Catch mex As MySqlException
      MessageBox.Show(mex.Message)
    Catch ex As Exception
      MessageBox.Show(ex.Message)
    Finally
      R.Close()
    End Try

  End Sub
  Private Sub GetData()
    lvPytanie.Items.Clear()
    Dim i As Byte = 0
    For Each row As DataRow In DTPytania.Rows
      i += CByte(1)
      lvPytanie.Items.Add(row.Item(0).ToString).UseItemStyleForSubItems = False
      Me.lvPytanie.Items(Me.lvPytanie.Items.Count - 1).SubItems.Add("Pytanie nr " & i.ToString, Color.LightCoral, lvPytanie.BackColor, lvPytanie.Font)
    Next
    lvPytanie.Columns(1).Width = CInt(IIf(lvPytanie.Items.Count > 32, 131, 150))
    Me.lvPytanie.Enabled = CType(IIf(Me.lvPytanie.Items.Count > 0, True, False), Boolean)

  End Sub
  Private Sub GetDetail(ByVal IdPytanie As String)
    Try
      txtTrescPytania.Text = DTPytania.Select("ID='" & IdPytanie & "'")(0).Item(1).ToString()
      Dim Limit As Integer

      Limit = SharedVersion.LimitOdp - DTAnswers.Select("IdPytanie=" & IdPytanie & " AND Punktacja>0").Count
      Limit = CType(IIf(Limit > DTAnswers.Select("IdPytanie=" & IdPytanie & " AND Punktacja<=0").Count, DTAnswers.Select("IdPytanie=" & IdPytanie & " AND Punktacja<=0").Count, Limit), Integer)
      Dim RN As ArrayList
      RN = Los(DTAnswers.Select("IdPytanie=" & IdPytanie).Count, 0, DTAnswers.Select("IdPytanie=" & IdPytanie).Count)
      Dim j As Integer = 0
      For Each item As Integer In RN
        If SharedVersion.TypTestu = GlobalValues.TypTestu.Wielokrotny Then
          Dim chk As New CheckBox
          chk.Tag = DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item(0) 'DT.Rows(item).Item(0)
          chk.Text = DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item(1).ToString
          chk.CheckState = CType(DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item("Status"), CheckState)
          chk.Dock = DockStyle.Fill
          chk.Name = "chkOdp" & j
          chk.TabIndex = j
          chk.ThreeState = False
          chk.UseVisualStyleBackColor = True
          chk.Font = New Font(chk.Font.FontFamily, 10, FontStyle.Bold)
          tlpOdp.Controls.Add(chk)
          'tlpOdp.RowStyles.Add(New RowStyle(SizeType.Absolute, 80))
          AddHandler chk.CheckedChanged, AddressOf CheckBox_CheckedChanged
        Else
          Dim rb As New RadioButton
          rb.Tag = DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item(0) 'DT.Rows(item).Item(0)
          rb.Text = DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item(1).ToString
          rb.Checked = CType(DTAnswers.Select("IdPytanie=" & IdPytanie)(item).Item("Status"), Boolean)
          rb.Dock = DockStyle.Fill
          rb.Name = "chkOdp" & j
          rb.TabIndex = j
          rb.UseVisualStyleBackColor = True
          rb.Font = New Font(rb.Font.FontFamily, 10, FontStyle.Bold)
          tlpOdp.Controls.Add(rb)
          AddHandler rb.CheckedChanged, AddressOf CheckBox_CheckedChanged
        End If
        tlpOdp.RowStyles.Add(New RowStyle(SizeType.Absolute, 80))

        j += 1
      Next

    Catch mex As MySqlException
      MessageBox.Show(mex.Message)
    Catch ex As Exception
      MessageBox.Show(ex.Message)
    End Try

  End Sub
  Private Function Los(ByVal LimitOdp As Integer, ByVal Min As Integer, ByVal Max As Integer) As ArrayList
    Dim RG As New Random, RN As New ArrayList(LimitOdp)
    Dim TMP As Integer, IsPresent As Boolean
    Dim i As Integer = 0
    Do While i < LimitOdp ' -1
      TMP = RG.Next(Min, Max)
      For Each item As Integer In RN
        If item = TMP Then
          IsPresent = True
          Exit For
        Else
          IsPresent = False
        End If
      Next
      If Not IsPresent Then
        RN.Add(TMP)
        i += 1
      End If
    Loop
    Return RN
  End Function
  Private Sub CheckBox_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
    If TypeOf sender Is CheckBox Then
      DTAnswers.Select("ID=" & CType(CType(sender, CheckBox).Tag, Integer))(0).Item("Status") = CType(CType(sender, CheckBox).CheckState, Byte)
    Else
      DTAnswers.Select("ID=" & CType(CType(sender, RadioButton).Tag, Integer))(0).Item("Status") = CType(IIf(CType(sender, RadioButton).Checked, 1, 0), Byte)

    End If
  End Sub
  Private Sub lvPytanie_ItemSelectionChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.ListViewItemSelectionChangedEventArgs) Handles lvPytanie.ItemSelectionChanged
    txtTrescPytania.Text = ""
    tlpOdp.Controls.Clear()
    If e.IsSelected Then
      e.Item.Font = New Font(e.Item.ListView.Font, FontStyle.Bold Or FontStyle.Italic)
      e.Item.SubItems(1).Font = New Font(e.Item.ListView.Font, FontStyle.Bold Or FontStyle.Italic)

      GetDetail(e.Item.Text)
    Else
      e.Item.Font = e.Item.ListView.Font
      e.Item.SubItems(1).Font = e.Item.ListView.Font
      e.Item.ForeColor = CType(IIf(DTAnswers.Select("IdPytanie=" & e.Item.Text & " AND Status=1").GetLength(0) > 0, Color.Black, e.Item.ForeColor), Color)
      e.Item.SubItems(1).ForeColor = CType(IIf(DTAnswers.Select("IdPytanie=" & e.Item.Text & " AND Status=1").GetLength(0) > 0, Color.Black, Color.LightCoral), Color)
    End If
    'MessageBox.Show(e.ItemIndex.ToString)
  End Sub
  Private Sub UpdateWersja()
    Try
      Dim DBA As New DataBaseAction, W As New WersjaSQL
      Dim cmd As MySqlCommand = DBA.CreateCommand(W.UpdateWersja(SharedVersion.VersionID))
      cmd.Parameters.AddWithValue("?CzasZakonczenia", Date.Now)
      cmd.Parameters.AddWithValue("?Score", Score)
      cmd.ExecuteNonQuery()

    Catch mex As MySqlException
      MessageBox.Show(mex.Message)
    Catch ex As Exception
      MessageBox.Show(ex.Message)
    End Try

  End Sub
  Private Sub SaveAnswer()
    Dim MySQLTrans As MySqlTransaction
    Dim DBA As New DataBaseAction, W As New WersjaSQL
    'Dim cmd As MySqlCommand = DBA.CreateCommand(W.UpdateWersja(SharedVersion.VersionID))
    MySQLTrans = GlobalValues.gblConn.BeginTransaction()
    'cmd.Transaction = MySQLTrans
    Try
      For Each Row As DataRow In DTAnswers.Select("Status=1")
        Dim cmdScore As MySqlCommand = DBA.CreateCommand(W.InsertWynik)
        cmdScore.Transaction = MySQLTrans
        cmdScore.Parameters.AddWithValue("?IdOdpowiedz", Row.Item(0).ToString)
        cmdScore.Parameters.AddWithValue("?IdWersja", SharedVersion.VersionID)
        cmdScore.Parameters.AddWithValue("?User", SharedVersion.UserName)
        cmdScore.Parameters.AddWithValue("?ComputerIP", GlobalValues.gblIP)
        cmdScore.ExecuteNonQuery()
      Next

      MySQLTrans.Commit()
      'Return True
    Catch err As MySqlException
      MySQLTrans.Rollback()
      Select Case err.Number
        'Case 1062
        '  MessageBox.Show("Podany użytkownik już istnieje." + vbNewLine + "Spróbuj innej nazwy.")
        Case Else
          MessageBox.Show(err.Message + vbNewLine + "Numer błędu: " + err.Number.ToString)
      End Select
    Catch ex As Exception
      MySQLTrans.Rollback()
      MessageBox.Show(ex.Message)

    End Try
  End Sub
  Public Function Score() As Double
    If SharedVersion.TypTestu = GlobalValues.TypTestu.Jednokrotny Then
      'MessageBox.Show(DTAnswers.Compute("Count(ID)", "Status=1 AND Punktacja>0").ToString)
      Return Math.Round(CType((CType(DTAnswers.Compute("COUNT(ID)", "Status>0 AND Punktacja>0"), Integer) / DTPytania.Rows.Count) * 100, Single), 2)

    Else
      Dim Total As Int16 = 0
      For Each Question As DataRow In DTPytania.Rows
        Dim SubTotal As Short = 0
        For Each Answer As DataRow In DTAnswers.Select("IdPytanie=" & Question.Item(0).ToString)
          If CType(Answer.Item(4), Byte) > 0 Then
            SubTotal += CType(Answer.Item(2), Short)
          End If
        Next
        Total += CType(IIf(SubTotal > 0, SubTotal, 0), Short)
      Next
      Return Math.Round(CType(((Total / CType(DTAnswers.Compute("SUM(Punktacja)", "Punktacja>0"), Short)) * 100), Single), 2)
    End If

  End Function


  Private Sub dlgOpenTest_Paint(ByVal sender As Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles Me.Paint
    Dim LinePen As New Pen(Color.White, 1)
    'e.Graphics.DrawLine(LinePen, New Point(2, 482), New Point(822, 482))
    e.Graphics.DrawLine(LinePen, New Point(2, Me.Height - 82), New Point(Me.Width - 11, Me.Height - 82))
  End Sub

End Class
